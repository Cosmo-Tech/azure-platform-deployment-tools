apiVersion: v1
kind: Pod
metadata:
  name: migration-pod
spec:
  containers:
  - name: migration-pod
    image: ghcr.io/cosmo-tech/mock-migrate:latest
    env:
    - name: COSMOS_DB
      value: phoenix-core
    - name: COSMOS_URI
      value: "$(kubectl -n phoenix get secret cosmotech-api-v2 -o yaml | yq -r '.data['application-helm.yml']' | base64 -d | yq '.csm.platform.azure.cosmos.uri')"
    - name: COSMOS_KEY
      value: "$(kubectl -n phoenix get secret cosmotech-api-v2 -o yaml | yq -r '.data['application-helm.yml']' | base64 -d | yq '.csm.platform.azure.cosmos.key')"
    - name: API_SCOPE
      value: .default
    - name: API_URL
      value: "${API_URL}"
  nodeSelector:
    "cosmotech.com/tier": "db"
  tolerations:
  - key: "vendor"
    operator: "Equal"
    value: "cosmotech"
    effect: "NoSchedule"
  restartPolicy: Never
  initContainers:
  - name: download-dependancies
    image: alpine:latest
    # command: [ "sh", "-c", "apk add --no-cache curl && curl -L https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64 -o /usr/local/bin/yq && chmod +x /usr/local/bin/yq" ]
    # volumeMounts:
    # - name: config-volume
    #   mountPath: /path/to/my
    command: ["sh", "-c", "wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64", "-o", "/usr/bin/yq", "&&", "chmod", "+x", "/usr/bin/yq"]
    securityContext: